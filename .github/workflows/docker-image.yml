name: Publish Docker image

on:
  push:
    tags: v**

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Process each cuda image
        run: |
          while IFS= read -r line; do
            hubkey=$(echo "$line" | grep -oP '(?<=cuda:)\d+\.\d+\.\d+(?=-)')
            echo "Extracted hubkey: $hubkey"
            IMAGE_TAG="shiertier/cuda:$hubkey"
            docker manifest inspect "$IMAGE_TAG" > /dev/null 2>&1
            if [ $? -ne 0 ]; then
              echo "Image $IMAGE_TAG does not exist."
              docker build -t "$IMAGE_TAG" -f cuda/Dockerfile --build-arg BASE_IMAGE="$line" .
              if [ $? -ne 0 ]; then
                echo "Failed to build image $IMAGE_TAG."
                exit 1
              else
                echo "Successfully built image $IMAGE_TAG."
              fi
              docker push "$IMAGE_TAG"
              if [ $? -ne 0 ]; then
                echo "Failed to push image $IMAGE_TAG."
                exit 1
              else
                echo "Successfully pushed image $IMAGE_TAG."
              fi
            else
              echo "Image $IMAGE_TAG already exists, skipping build."
            fi
          done < cuda/cuda_images
